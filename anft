-- Animated NFT API
-- Based off of Nitrogenfinger's NFT format

-- This is basically NFT but with multiple frame support, but hey, what's to complain about

local lchar = "\29"
local bchar = "\30"
local tchar = "\31"

loadImageData = function(image, background)
	-- image (string)
	-- It's the text data that one might read from an "ANFT" file!
	local x, y, i = 1, 1, string.find(image,lchar)
	local textCol, backCol = " ", background or " "
	local char, text, back = "", "", ""
	local frame = 1
	local output = {{{}}}
	local curI, nextI, prevI
	local hex = "0123456789abcdef "
	i = i + 1
	repeat
		i = i + 1
		prevI, curI, nextI = image:sub(i+-1,i+-1), image:sub(i,i), image:sub(i+1,i+1)
		if curI == bchar then
			if prevI == bchar then
				char = char..nextI
				text = text..textCol
				back = back..backCol
				x = x + 1
			elseif hex:find(nextI:lower()) then
				backCol = nextI
			end
		elseif curI == tchar then
			if prevI == bchar then
				char = char..nextI
				text = text..textCol
				back = back..backCol
				x = x + 1
                        elseif hex:find(nextI:lower()) then
				textCol = nextI
                        end
		elseif curI == "\n" then
			output[frame][y] = {char,text,back}
			x = 1
			y = y + 1
			char, text, back = "","",""
		elseif curI == lchar then
			if prevI == "/n" then
				output[frame][y] = nil
			end
			frame = frame + 1
			output[frame] = {}
			textCol, backCol = " ", " "
			char, text, back = "","",""
			x, y = 1, 1
		else
			if not (hex:find(curI:lower()) and (prevI == bchar or prevI == tchar)) then
				char = char..curI
				text = text..textCol
				back = back..backCol
				x = x + 1
			end
		end
	until i >= #image
	output[frame][y] = {char,text,back}
	return output
end

loadImage = function(path)
	-- path (string)
	-- A path to an ANFT file to be loaded.
	local file = fs.open(path,"r")
	local contents = file.readAll()
	file.close()
	return loadImageData(contents)
end

drawImage = function(image, frame, x, y)
	if not tonumber(frame) then error("Frame number expected...") end
	if not image[frame] then error("Image has no such frame") end
	local im = image[frame]
	for iy = 1, #im do
		for ix = 1, #im[iy][1] do
			if not (im[iy][1]:sub(ix,ix) == " " and im[iy][3]:sub(ix,ix) == " ") then
				term.setCursorPos(ix-1+x,iy-1+y)
				term.blit(
					im[iy][1]:sub(ix,ix),
					im[iy][2]:sub(ix,ix),
					im[iy][3]:sub(ix,ix)
				)
			end
		end
	end
end
